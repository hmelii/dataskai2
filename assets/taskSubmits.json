{
  "data": {
    "task_name": "aero_eng_2_fuel_filter_clog",
    "submits": [
      {
        "model_name": "trivial mean by AC model",
        "model_version": "1.0",
        "tags": null,
        "author": "trivial.model_builder",
        "id": "5d9d9ecbd81b2b6e1e0a2062",
        "metrics": {
          "roc": {
            "value": 0.32382482572125937,
            "short_value": 0.3238
          },
          "max_f1": {
            "value": 0.0008421495868203591,
            "short_value": 0.0008
          }
        },
        "created": "2019-10-09T05:48:11+00:00",
        "features": 20,
        "attachments": {
          "notebook": true,
          "other_files": 4,
          "attachments_download_path": "/submits/5d9d9ecbd81b2b6e1e0a2062/download",
          "files": [
            {
              "name": "notebook.ipynb",
              "download_path": "/submits/5d9d9ecbd81b2b6e1e0a2062/download/52139215687202564465121552896190791860"
            },
            {
              "name": "file_0.py",
              "download_path": "/submits/5d9d9ecbd81b2b6e1e0a2062/download/249470078807623100113497289846680304100"
            },
            {
              "name": "file_1.py",
              "download_path": "/submits/5d9d9ecbd81b2b6e1e0a2062/download/145239349003393055695586654820408744070"
            },
            {
              "name": "file_2.py",
              "download_path": "/submits/5d9d9ecbd81b2b6e1e0a2062/download/107103259263147412175560653564217338668"
            },
            {
              "name": "file_3.py",
              "download_path": "/submits/5d9d9ecbd81b2b6e1e0a2062/download/122680493372089002698104854026978294486"
            }
          ]
        }
      },
      {
        "model_name": "trivial mean by condition of failure in current flight",
        "model_version": "1.0",
        "tags": null,
        "author": "trivial.model_builder",
        "id": "5d9edb882109d3267661d883",
        "metrics": {
          "roc": {
            "value": 0.3801727569111544,
            "short_value": 0.3802
          },
          "max_f1": {
            "value": 0.15384615384615385,
            "short_value": 0.1538
          }
        },
        "created": "2019-10-10T04:19:36+00:00",
        "features": 21,
        "attachments": {
          "notebook": true,
          "other_files": 5,
          "attachments_download_path": "/submits/5d9edb882109d3267661d883/download",
          "files": [
            {
              "name": "notebook.ipynb",
              "download_path": "/submits/5d9edb882109d3267661d883/download/47508555617268509169086273838371603107"
            },
            {
              "name": "file_0.py",
              "download_path": "/submits/5d9edb882109d3267661d883/download/176735344579390276495136417643930516102"
            },
            {
              "name": "file_1.py",
              "download_path": "/submits/5d9edb882109d3267661d883/download/161865285535984938568554579400820348643"
            },
            {
              "name": "file_2.py",
              "download_path": "/submits/5d9edb882109d3267661d883/download/239786456992029689064113935768787132541"
            },
            {
              "name": "file_3.py",
              "download_path": "/submits/5d9edb882109d3267661d883/download/152515229427558192750036207132716297718"
            },
            {
              "name": "file_4.py",
              "download_path": "/submits/5d9edb882109d3267661d883/download/251143748181031265254957946654431999487"
            }
          ]
        }
      },
      {
        "model_name": "trivial prod over conditional probability (condition of failure in current flight) and probability of failure by AC",
        "model_version": "1.0",
        "tags": null,
        "author": "trivial.model_builder",
        "id": "5d9ee05d7a63da5cbb4bca00",
        "metrics": {
          "roc": {
            "value": 0.3604866488729682,
            "short_value": 0.3605
          },
          "max_f1": {
            "value": 0.0009060468780776049,
            "short_value": 0.0009
          }
        },
        "created": "2019-10-10T04:40:13+00:00",
        "features": 21,
        "attachments": null
      },
      {
        "model_name": "trivial mean of conditional probability (condition of failure in current flight) and probability if failure by AC",
        "model_version": "1.0",
        "tags": null,
        "author": "trivial.model_builder",
        "id": "5d9ee1222649eeeaec24cd83",
        "metrics": {
          "roc": {
            "value": 0.47480201583873305,
            "short_value": 0.4748
          },
          "max_f1": {
            "value": 0.0008421495868203588,
            "short_value": 0.0008
          }
        },
        "created": "2019-10-10T04:43:30+00:00",
        "features": 21,
        "attachments": null
      },
      {
        "model_name": "",
        "model_version": "1.0",
        "tags": "",
        "author": "Alexander.Vasin",
        "id": "5da592c570a528fdfc5462d1",
        "metrics": {
          "roc": {
            "value": 0.541534969885336,
            "short_value": 0.5415
          },
          "max_f1": {
            "value": 0.0975609756097561,
            "short_value": 0.0976
          }
        },
        "created": "2019-10-15T06:35:01+00:00",
        "features": 0,
        "attachments": null
      },
      {
        "model_name": "LogisticRegression",
        "model_version": "1.0",
        "tags": "FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_1_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_1_FUEL_FILTER_CLOG', 'value': 1}, FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_2_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_2_FUEL_FILTER_CLOG', 'value': 1}, LogisticRegression: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'warn', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'warn', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': nan, 'strategy': 'mean', 'verbose': 0}, StandardScaler: {'copy': True, 'with_mean': True, 'with_std': True}",
        "author": "Alexander.Vasin",
        "id": "5da596ac70a528fdfc5462d2",
        "metrics": {
          "roc": {
            "value": 0.533457567297055,
            "short_value": 0.5335
          },
          "max_f1": {
            "value": 0.00416233090530697,
            "short_value": 0.0042
          }
        },
        "created": "2019-10-15T06:51:40+00:00",
        "features": 152,
        "attachments": {
          "notebook": true,
          "other_files": 1,
          "attachments_download_path": "/submits/5da596ac70a528fdfc5462d2/download",
          "files": [
            {
              "name": "notebook.ipynb",
              "download_path": "/submits/5da596ac70a528fdfc5462d2/download/164263457604991602715850367021230180196"
            },
            {
              "name": "file_0.py",
              "download_path": "/submits/5da596ac70a528fdfc5462d2/download/311735646427074047295044046379655241848"
            }
          ]
        }
      },
      {
        "model_name": "LogisticRegression",
        "model_version": "1.0",
        "tags": "FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_1_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_1_FUEL_FILTER_CLOG', 'value': 1}, FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_2_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_2_FUEL_FILTER_CLOG', 'value': 1}, LogisticRegression: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'warn', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'warn', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': nan, 'strategy': 'mean', 'verbose': 0}, StandardScaler: {'copy': True, 'with_mean': True, 'with_std': True}",
        "author": "Alexander.Vasin",
        "id": "5da596f870a528fdfc5462d3",
        "metrics": {
          "roc": {
            "value": 0.5334575672970553,
            "short_value": 0.5335
          },
          "max_f1": {
            "value": 0.004162330905306971,
            "short_value": 0.0042
          }
        },
        "created": "2019-10-15T06:52:55+00:00",
        "features": 152,
        "attachments": {
          "notebook": true,
          "other_files": 5,
          "attachments_download_path": "/submits/5da596f870a528fdfc5462d3/download",
          "files": [
            {
              "name": "notebook.ipynb",
              "download_path": "/submits/5da596f870a528fdfc5462d3/download/55577539980168426148276777679481188503"
            },
            {
              "name": "file_0.py",
              "download_path": "/submits/5da596f870a528fdfc5462d3/download/172427527345672765834522656987000316379"
            },
            {
              "name": "file_1.py",
              "download_path": "/submits/5da596f870a528fdfc5462d3/download/322463632019342301807442953234079030400"
            },
            {
              "name": "file_2.py",
              "download_path": "/submits/5da596f870a528fdfc5462d3/download/211175844509711057655342324801957196247"
            },
            {
              "name": "file_3.py",
              "download_path": "/submits/5da596f870a528fdfc5462d3/download/66209280995310789496503814770309568578"
            },
            {
              "name": "file_4.py",
              "download_path": "/submits/5da596f870a528fdfc5462d3/download/44906276771391801268074387882495149304"
            }
          ]
        }
      },
      {
        "model_name": "LogisticRegression",
        "model_version": "1.0",
        "tags": "FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_1_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_1_FUEL_FILTER_CLOG', 'value': 1}, FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_2_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_2_FUEL_FILTER_CLOG', 'value': 1}, LogisticRegression: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'warn', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'warn', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': nan, 'strategy': 'mean', 'verbose': 0}, StandardScaler: {'copy': True, 'with_mean': True, 'with_std': True}",
        "author": "Alexander.Vasin",
        "id": "5da5973770a528fdfc5462d8",
        "metrics": {
          "roc": {
            "value": 0.533457567297055,
            "short_value": 0.5335
          },
          "max_f1": {
            "value": 0.00416233090530697,
            "short_value": 0.0042
          }
        },
        "created": "2019-10-15T06:53:58+00:00",
        "features": 152,
        "attachments": null
      },
      {
        "model_name": "LogisticRegression",
        "model_version": "1.0",
        "tags": "FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_1_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_1_FUEL_FILTER_CLOG', 'value': 1}, FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_2_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_2_FUEL_FILTER_CLOG', 'value': 1}, LogisticRegression: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'warn', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'warn', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': nan, 'strategy': 'mean', 'verbose': 0}, StandardScaler: {'copy': True, 'with_mean': True, 'with_std': True}",
        "author": "Alexander.Vasin",
        "id": "5da5979770a528fdfc5462d9",
        "metrics": {
          "roc": {
            "value": 0.533457567297055,
            "short_value": 0.5335
          },
          "max_f1": {
            "value": 0.00416233090530697,
            "short_value": 0.0042
          }
        },
        "created": "2019-10-15T06:55:35+00:00",
        "features": 152,
        "attachments": {
          "notebook": true,
          "other_files": 2,
          "attachments_download_path": "/submits/5da5979770a528fdfc5462d9/download",
          "files": [
            {
              "name": "notebook.ipynb",
              "download_path": "/submits/5da5979770a528fdfc5462d9/download/237355084553069992852311919817809223416"
            },
            {
              "name": "file_0.py",
              "download_path": "/submits/5da5979770a528fdfc5462d9/download/167315276768033252054707317083535344785"
            },
            {
              "name": "file_1.py",
              "download_path": "/submits/5da5979770a528fdfc5462d9/download/67661772277124375876140338925402607998"
            }
          ]
        }
      },
      {
        "model_name": "LogisticRegression",
        "model_version": "1.0",
        "tags": "FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_1_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_1_FUEL_FILTER_CLOG', 'value': 1}, FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_2_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_2_FUEL_FILTER_CLOG', 'value': 1}, LogisticRegression: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'warn', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'warn', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': nan, 'strategy': 'mean', 'verbose': 0}, StandardScaler: {'copy': True, 'with_mean': True, 'with_std': True}",
        "author": "Alexander.Vasin",
        "id": "5da598a070a528fdfc5462da",
        "metrics": {
          "roc": {
            "value": 0.533457567297055,
            "short_value": 0.5335
          },
          "max_f1": {
            "value": 0.00416233090530697,
            "short_value": 0.0042
          }
        },
        "created": "2019-10-15T07:00:00+00:00",
        "features": 152,
        "attachments": {
          "notebook": false,
          "other_files": 3,
          "attachments_download_path": "/submits/5da598a070a528fdfc5462da/download",
          "files": [
            {
              "name": "file_0.py",
              "download_path": "/submits/5da598a070a528fdfc5462da/download/261529709641730269440095988213734928226"
            },
            {
              "name": "file_1.py",
              "download_path": "/submits/5da598a070a528fdfc5462da/download/48815397616373151389779749728442644430"
            },
            {
              "name": "file_2.py",
              "download_path": "/submits/5da598a070a528fdfc5462da/download/68456146090925774004219857926383333654"
            }
          ]
        }
      },
      {
        "model_name": "LogisticRegression",
        "model_version": "1.0",
        "tags": "FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_1_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_1_FUEL_FILTER_CLOG', 'value': 1}, FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_2_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_2_FUEL_FILTER_CLOG', 'value': 1}, LogisticRegression: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'warn', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'warn', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': nan, 'strategy': 'mean', 'verbose': 0}, StandardScaler: {'copy': True, 'with_mean': True, 'with_std': True}",
        "author": "Alexander.Vasin",
        "id": "5da59ac770a528fdfc5462db",
        "metrics": {
          "roc": {
            "value": 0.533457567297055,
            "short_value": 0.5335
          },
          "max_f1": {
            "value": 0.00416233090530697,
            "short_value": 0.0042
          }
        },
        "created": "2019-10-15T07:09:10+00:00",
        "features": 152,
        "attachments": {
          "notebook": false,
          "other_files": 3,
          "attachments_download_path": "/submits/5da59ac770a528fdfc5462db/download",
          "files": [
            {
              "name": "file_0.py",
              "download_path": "/submits/5da59ac770a528fdfc5462db/download/109722718848141034476314677862370799257"
            },
            {
              "name": "file_1.py",
              "download_path": "/submits/5da59ac770a528fdfc5462db/download/193144081129161425302042564593273914844"
            },
            {
              "name": "file_2.py",
              "download_path": "/submits/5da59ac770a528fdfc5462db/download/20370239881704839037781384105172835078"
            }
          ]
        }
      },
      {
        "model_name": "DummyClassifier",
        "model_version": "1.0",
        "tags": "",
        "author": "Alexander.Vasin",
        "id": "5da5a3f770a528fdfc5462dc",
        "metrics": {
          "roc": {
            "value": 0.541666666666667,
            "short_value": 0.5417
          },
          "max_f1": {
            "value": 0.153846153846154,
            "short_value": 0.1538
          }
        },
        "created": "2019-10-15T07:48:21+00:00",
        "features": 1,
        "attachments": {
          "notebook": true,
          "other_files": 5,
          "attachments_download_path": "/submits/5da5a3f770a528fdfc5462dc/download",
          "files": [
            {
              "name": "notebook.ipynb",
              "download_path": "/submits/5da5a3f770a528fdfc5462dc/download/90597519261840106794820520794159089492"
            },
            {
              "name": "file_0.py",
              "download_path": "/submits/5da5a3f770a528fdfc5462dc/download/260376031321658581803186212800158770624"
            },
            {
              "name": "file_1.py",
              "download_path": "/submits/5da5a3f770a528fdfc5462dc/download/173654721883901493334611837666162774137"
            },
            {
              "name": "file_2.py",
              "download_path": "/submits/5da5a3f770a528fdfc5462dc/download/9391472067480180492731223221465677256"
            },
            {
              "name": "file_3.py",
              "download_path": "/submits/5da5a3f770a528fdfc5462dc/download/164421947519697810127989421624571962780"
            },
            {
              "name": "file_4.py",
              "download_path": "/submits/5da5a3f770a528fdfc5462dc/download/328922610082448750415448997774972806474"
            }
          ]
        }
      },
      {
        "model_name": "all_zeroes",
        "model_version": 0,
        "tags": null,
        "author": "Andrey.Kalmykov",
        "id": "5da738dd55437fea20148e98",
        "metrics": {
          "roc": {
            "value": 0.5,
            "short_value": 0.5
          },
          "max_f1": {
            "value": 0.0008421495868203588,
            "short_value": 0.0008
          }
        },
        "created": "2019-10-16T12:35:56+00:00",
        "features": 0,
        "attachments": {
          "notebook": true,
          "other_files": 2,
          "attachments_download_path": "/submits/5da738dd55437fea20148e98/download",
          "files": [
            {
              "name": "notebook.ipynb",
              "download_path": "/submits/5da738dd55437fea20148e98/download/307812191507437688595594074524787967573"
            },
            {
              "name": "file_0.py",
              "download_path": "/submits/5da738dd55437fea20148e98/download/248639496290498008458177915889252739632"
            },
            {
              "name": "file_1.py",
              "download_path": "/submits/5da738dd55437fea20148e98/download/301130268546164102480889425862845711957"
            }
          ]
        }
      },
      {
        "model_name": "LogisticRegression",
        "model_version": "1.0",
        "tags": "FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_1_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_1_FUEL_FILTER_CLOG', 'value': 1}, FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_2_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_2_FUEL_FILTER_CLOG', 'value': 1}, LogisticRegression: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'warn', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'liblinear', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': nan, 'strategy': 'mean', 'verbose': 0}, StandardScaler: {'copy': True, 'with_mean': True, 'with_std': True}",
        "author": "Alexander.Vasin",
        "id": "5da8322c333d7fe97a4012fd",
        "metrics": {
          "roc": {
            "value": 0.5120546453844668,
            "short_value": 0.5121
          },
          "max_f1": {
            "value": 0.0008629368617862794,
            "short_value": 0.0009
          }
        },
        "created": "2019-10-17T06:19:39+00:00",
        "features": 152,
        "attachments": {
          "notebook": true,
          "other_files": 5,
          "attachments_download_path": "/submits/5da8322c333d7fe97a4012fd/download",
          "files": [
            {
              "name": "notebook.ipynb",
              "download_path": "/submits/5da8322c333d7fe97a4012fd/download/257402654117647613954479521051463081328"
            },
            {
              "name": "file_0.py",
              "download_path": "/submits/5da8322c333d7fe97a4012fd/download/220817569862427762486331379680209313470"
            },
            {
              "name": "file_1.py",
              "download_path": "/submits/5da8322c333d7fe97a4012fd/download/199073497956344191673146892078232568200"
            },
            {
              "name": "file_2.py",
              "download_path": "/submits/5da8322c333d7fe97a4012fd/download/34382509049256274414467330060549067822"
            },
            {
              "name": "file_3.py",
              "download_path": "/submits/5da8322c333d7fe97a4012fd/download/179492972117173823434393724685420130568"
            },
            {
              "name": "file_4.py",
              "download_path": "/submits/5da8322c333d7fe97a4012fd/download/70543324837058392686288905018958911253"
            }
          ]
        }
      },
      {
        "model_name": "LogisticRegression",
        "model_version": "1.0",
        "tags": "FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_1_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_1_FUEL_FILTER_CLOG', 'value': 1}, FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_2_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_2_FUEL_FILTER_CLOG', 'value': 1}, LogisticRegression: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'warn', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'liblinear', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': nan, 'strategy': 'mean', 'verbose': 0}, StandardScaler: {'copy': True, 'with_mean': True, 'with_std': True}",
        "author": "Alexander.Vasin",
        "id": "5da8328d333d7fe97a4012fe",
        "metrics": {
          "roc": {
            "value": 0.5728458796467014,
            "short_value": 0.5728
          },
          "max_f1": {
            "value": 0.0009856262833675565,
            "short_value": 0.001
          }
        },
        "created": "2019-10-17T06:21:16+00:00",
        "features": 148,
        "attachments": {
          "notebook": false,
          "other_files": 3,
          "attachments_download_path": "/submits/5da8328d333d7fe97a4012fe/download",
          "files": [
            {
              "name": "file_0.py",
              "download_path": "/submits/5da8328d333d7fe97a4012fe/download/119040971710345591153617720716372192968"
            },
            {
              "name": "file_1.py",
              "download_path": "/submits/5da8328d333d7fe97a4012fe/download/147202148403833277039019175263876705408"
            },
            {
              "name": "file_2.py",
              "download_path": "/submits/5da8328d333d7fe97a4012fe/download/36733232964611074088343053430830852301"
            }
          ]
        }
      },
      {
        "model_name": "LogisticRegression",
        "model_version": "1.0",
        "tags": "FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_1_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_1_FUEL_FILTER_CLOG', 'value': 1}, FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_2_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_2_FUEL_FILTER_CLOG', 'value': 1}, LogisticRegression: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'warn', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'liblinear', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': nan, 'strategy': 'mean', 'verbose': 0}, StandardScaler: {'copy': True, 'with_mean': True, 'with_std': True}",
        "author": "Alexander.Vasin",
        "id": "5da83467acb1312ec557ebb5",
        "metrics": {
          "roc": {
            "value": 0.5728458796467014,
            "short_value": 0.5728
          },
          "max_f1": {
            "value": 0.0009856262833675565,
            "short_value": 0.001
          }
        },
        "created": "2019-10-17T06:29:10+00:00",
        "features": 148,
        "attachments": {
          "notebook": false,
          "other_files": 3,
          "attachments_download_path": "/submits/5da83467acb1312ec557ebb5/download",
          "files": [
            {
              "name": "file_0.py",
              "download_path": "/submits/5da83467acb1312ec557ebb5/download/133918502158753569132079306590978741457"
            },
            {
              "name": "file_1.py",
              "download_path": "/submits/5da83467acb1312ec557ebb5/download/256722691888620257059246509547104902803"
            },
            {
              "name": "file_2.py",
              "download_path": "/submits/5da83467acb1312ec557ebb5/download/73549721067905743546412543999189879131"
            }
          ]
        }
      },
      {
        "model_name": "LogisticRegression",
        "model_version": "1.0",
        "tags": "FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_1_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_1_FUEL_FILTER_CLOG', 'value': 1}, FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_2_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_2_FUEL_FILTER_CLOG', 'value': 1}, LogisticRegression: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'warn', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'liblinear', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': nan, 'strategy': 'mean', 'verbose': 0}, StandardScaler: {'copy': True, 'with_mean': True, 'with_std': True}",
        "author": "Alexander.Vasin",
        "id": "5da83bb4acb1312ec557ebb6",
        "metrics": {
          "roc": {
            "value": 0.5728458796467014,
            "short_value": 0.5728
          },
          "max_f1": {
            "value": 0.0009856262833675565,
            "short_value": 0.001
          }
        },
        "created": "2019-10-17T07:00:19+00:00",
        "features": 152,
        "attachments": {
          "notebook": true,
          "other_files": 5,
          "attachments_download_path": "/submits/5da83bb4acb1312ec557ebb6/download",
          "files": [
            {
              "name": "notebook.ipynb",
              "download_path": "/submits/5da83bb4acb1312ec557ebb6/download/309031783937089658535957414202092928090"
            },
            {
              "name": "file_0.py",
              "download_path": "/submits/5da83bb4acb1312ec557ebb6/download/147776534440822444077199884214529412877"
            },
            {
              "name": "file_1.py",
              "download_path": "/submits/5da83bb4acb1312ec557ebb6/download/301178275140949109943887845909978892855"
            },
            {
              "name": "file_2.py",
              "download_path": "/submits/5da83bb4acb1312ec557ebb6/download/126733711785098703335713976704836300474"
            },
            {
              "name": "file_3.py",
              "download_path": "/submits/5da83bb4acb1312ec557ebb6/download/133107730022606969581931758633720374050"
            },
            {
              "name": "file_4.py",
              "download_path": "/submits/5da83bb4acb1312ec557ebb6/download/253226550518768729105056017269436156970"
            }
          ]
        }
      },
      {
        "model_name": "LogisticRegression",
        "model_version": "1.0",
        "tags": "FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_1_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_1_FUEL_FILTER_CLOG', 'value': 1}, FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_2_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_2_FUEL_FILTER_CLOG', 'value': 1}, LogisticRegression: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'warn', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'liblinear', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': nan, 'strategy': 'mean', 'verbose': 0}, StandardScaler: {'copy': True, 'with_mean': True, 'with_std': True}",
        "author": "Alexander.Vasin",
        "id": "5da83cadacb1312ec557ebb7",
        "metrics": {
          "roc": {
            "value": 0.42830427224358636,
            "short_value": 0.4283
          },
          "max_f1": {
            "value": 0.13793103448275862,
            "short_value": 0.1379
          }
        },
        "created": "2019-10-17T07:04:28+00:00",
        "features": 152,
        "attachments": {
          "notebook": true,
          "other_files": 4,
          "attachments_download_path": "/submits/5da83cadacb1312ec557ebb7/download",
          "files": [
            {
              "name": "notebook.ipynb",
              "download_path": "/submits/5da83cadacb1312ec557ebb7/download/310410038796152024140068826494343774784"
            },
            {
              "name": "file_0.py",
              "download_path": "/submits/5da83cadacb1312ec557ebb7/download/102833014398671221450691184659880368660"
            },
            {
              "name": "file_1.py",
              "download_path": "/submits/5da83cadacb1312ec557ebb7/download/56464293715004973545269398499076794071"
            },
            {
              "name": "file_2.py",
              "download_path": "/submits/5da83cadacb1312ec557ebb7/download/132566965634579326409366428872481031101"
            },
            {
              "name": "file_3.py",
              "download_path": "/submits/5da83cadacb1312ec557ebb7/download/139455604416451533408062795555217360874"
            }
          ]
        }
      },
      {
        "model_name": "LogisticRegression",
        "model_version": "1.0",
        "tags": "FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_1_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_1_FUEL_FILTER_CLOG', 'value': 1}, FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_2_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_2_FUEL_FILTER_CLOG', 'value': 1}, LogisticRegression: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'warn', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'liblinear', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': nan, 'strategy': 'mean', 'verbose': 0}, StandardScaler: {'copy': True, 'with_mean': True, 'with_std': True}",
        "author": "Alexander.Vasin",
        "id": "5da83cf5acb1312ec557ebb8",
        "metrics": {
          "roc": {
            "value": 0.5716957277564136,
            "short_value": 0.5717
          },
          "max_f1": {
            "value": 0.0014235408706076273,
            "short_value": 0.0014
          }
        },
        "created": "2019-10-17T07:05:41+00:00",
        "features": 152,
        "attachments": {
          "notebook": true,
          "other_files": 1,
          "attachments_download_path": "/submits/5da83cf5acb1312ec557ebb8/download",
          "files": [
            {
              "name": "notebook.ipynb",
              "download_path": "/submits/5da83cf5acb1312ec557ebb8/download/48578070812706120039943677532836404134"
            },
            {
              "name": "file_0.py",
              "download_path": "/submits/5da83cf5acb1312ec557ebb8/download/328305952053175209140955592797889647377"
            }
          ]
        }
      },
      {
        "model_name": "LogisticRegression",
        "model_version": "1.0",
        "tags": "FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_1_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_1_FUEL_FILTER_CLOG', 'value': 1}, FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_2_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_2_FUEL_FILTER_CLOG', 'value': 1}, LogisticRegression: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'warn', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'liblinear', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': nan, 'strategy': 'mean', 'verbose': 0}, StandardScaler: {'copy': True, 'with_mean': True, 'with_std': True}",
        "author": "Alexander.Vasin",
        "id": "5da83d89acb1312ec557ebb9",
        "metrics": {
          "roc": {
            "value": 0.5907902977517896,
            "short_value": 0.5908
          },
          "max_f1": {
            "value": 0.0015257746939368617,
            "short_value": 0.0015
          }
        },
        "created": "2019-10-17T07:08:08+00:00",
        "features": 148,
        "attachments": {
          "notebook": true,
          "other_files": 5,
          "attachments_download_path": "/submits/5da83d89acb1312ec557ebb9/download",
          "files": [
            {
              "name": "notebook.ipynb",
              "download_path": "/submits/5da83d89acb1312ec557ebb9/download/291360492311502947067912894659473695315"
            },
            {
              "name": "file_0.py",
              "download_path": "/submits/5da83d89acb1312ec557ebb9/download/224286058799730262102190516225927413912"
            },
            {
              "name": "file_1.py",
              "download_path": "/submits/5da83d89acb1312ec557ebb9/download/28676982909687413382774304439460092057"
            },
            {
              "name": "file_2.py",
              "download_path": "/submits/5da83d89acb1312ec557ebb9/download/88062249437052893703834079076915986726"
            },
            {
              "name": "file_3.py",
              "download_path": "/submits/5da83d89acb1312ec557ebb9/download/157163842310254949514461174706323375522"
            },
            {
              "name": "file_4.py",
              "download_path": "/submits/5da83d89acb1312ec557ebb9/download/71982930182537466939344665799361685149"
            }
          ]
        }
      },
      {
        "model_name": "LogisticRegression",
        "model_version": "1.0",
        "tags": "FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_1_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_1_FUEL_FILTER_CLOG', 'value': 1}, FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_2_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_2_FUEL_FILTER_CLOG', 'value': 1}, LogisticRegression: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'warn', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'liblinear', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': 'auto', 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, OneHotEncoder: {'categorical_features': None, 'categories': None, 'drop': None, 'dtype': <class 'numpy.float64'>, 'handle_unknown': 'ignore', 'n_values': None, 'sparse': False}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': None, 'strategy': 'constant', 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': nan, 'strategy': 'mean', 'verbose': 0}, StandardScaler: {'copy': True, 'with_mean': True, 'with_std': True}",
        "author": "Alexander.Vasin",
        "id": "5da84363acb1312ec557ebba",
        "metrics": {
          "roc": {
            "value": 0.5907902977517896,
            "short_value": 0.5908
          },
          "max_f1": {
            "value": 0.0015257746939368617,
            "short_value": 0.0015
          }
        },
        "created": "2019-10-17T07:33:07+00:00",
        "features": 148,
        "attachments": {
          "notebook": false,
          "other_files": 3,
          "attachments_download_path": "/submits/5da84363acb1312ec557ebba/download",
          "files": [
            {
              "name": "file_0.py",
              "download_path": "/submits/5da84363acb1312ec557ebba/download/119205263992134957024164932492345255574"
            },
            {
              "name": "file_1.py",
              "download_path": "/submits/5da84363acb1312ec557ebba/download/39723537437799194492783066983880447876"
            },
            {
              "name": "file_2.py",
              "download_path": "/submits/5da84363acb1312ec557ebba/download/261849519013536918610750302644921348470"
            }
          ]
        }
      },
      {
        "model_name": "extra tree on base feats without nans",
        "model_version": 0,
        "tags": null,
        "author": "Andrey.Kalmykov",
        "id": "5da9c6d95b9780cb8f29a4e2",
        "metrics": {
          "roc": {
            "value": 0.5416666666666666,
            "short_value": 0.5417
          },
          "max_f1": {
            "value": 0.15384615384615385,
            "short_value": 0.1538
          }
        },
        "created": "2019-10-18T11:06:16+00:00",
        "features": 260,
        "attachments": null
      },
      {
        "model_name": "LGBMClassifier",
        "model_version": "1.0",
        "tags": "FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_1_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_1_FUEL_FILTER_CLOG', 'value': 1}, FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_2_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_2_FUEL_FILTER_CLOG', 'value': 1}, FeatureDtypeConvector: {'default_dtype': <class 'numpy.float32'>, 'except_dtype': {'aircraft_id': 'category'}}, LGBMClassifier: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': 4, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 8, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}",
        "author": "Alexander.Vasin",
        "id": "5dad40b278f7bcd298136b74",
        "metrics": {
          "roc": {
            "value": 0.7303292565863024,
            "short_value": 0.7303
          },
          "max_f1": {
            "value": 0.002097535395909806,
            "short_value": 0.0021
          }
        },
        "created": "2019-10-21T02:22:57+00:00",
        "features": 59,
        "attachments": {
          "notebook": true,
          "other_files": 2,
          "attachments_download_path": "/submits/5dad40b278f7bcd298136b74/download",
          "files": [
            {
              "name": "notebook.ipynb",
              "download_path": "/submits/5dad40b278f7bcd298136b74/download/277212961431914228031803257442712200956"
            },
            {
              "name": "file_0.py",
              "download_path": "/submits/5dad40b278f7bcd298136b74/download/31495872181434655600777535978971511271"
            },
            {
              "name": "file_1.py",
              "download_path": "/submits/5dad40b278f7bcd298136b74/download/191209581788655601733313436363957037311"
            }
          ]
        }
      },
      {
        "model_name": "LGBMClassifier",
        "model_version": "1.0",
        "tags": "FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_1_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_1_FUEL_FILTER_CLOG', 'value': 1}, FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_2_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_2_FUEL_FILTER_CLOG', 'value': 1}, LGBMClassifier: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 1.136475296686555, 'max_depth': 2, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 72, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0, 'verbose': 0}",
        "author": "Alexander.Vasin",
        "id": "5dae9c7aa86665e5d486cf4e",
        "metrics": {
          "roc": {
            "value": 0.5080521607051923,
            "short_value": 0.5081
          },
          "max_f1": {
            "value": 0.0008565151007336239,
            "short_value": 0.0009
          }
        },
        "created": "2019-10-22T03:06:48+00:00",
        "features": 59,
        "attachments": {
          "notebook": true,
          "other_files": 1,
          "attachments_download_path": "/submits/5dae9c7aa86665e5d486cf4e/download",
          "files": [
            {
              "name": "notebook.ipynb",
              "download_path": "/submits/5dae9c7aa86665e5d486cf4e/download/127490584160084085682266712239349663224"
            },
            {
              "name": "file_0.py",
              "download_path": "/submits/5dae9c7aa86665e5d486cf4e/download/63346195799503817467798092881476283770"
            }
          ]
        }
      },
      {
        "model_name": "LGBMClassifier",
        "model_version": "1.0",
        "tags": "FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_1_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_1_FUEL_FILTER_CLOG', 'value': 1}, FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_2_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_2_FUEL_FILTER_CLOG', 'value': 1}, LGBMClassifier: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': 4, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 8, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0, 'verbose': 0}",
        "author": "Alexander.Vasin",
        "id": "5daff7b85efbb301321079ad",
        "metrics": {
          "roc": {
            "value": 0.32496217375780667,
            "short_value": 0.325
          },
          "max_f1": {
            "value": 0.0009008806107970541,
            "short_value": 0.0009
          }
        },
        "created": "2019-10-23T03:48:24+00:00",
        "features": 59,
        "attachments": {
          "notebook": true,
          "other_files": 5,
          "attachments_download_path": "/submits/5daff7b85efbb301321079ad/download",
          "files": [
            {
              "name": "notebook.ipynb",
              "download_path": "/submits/5daff7b85efbb301321079ad/download/107331487060969172326692505587501747960"
            },
            {
              "name": "file_0.py",
              "download_path": "/submits/5daff7b85efbb301321079ad/download/31549834631332872418293514900163067943"
            },
            {
              "name": "file_1.py",
              "download_path": "/submits/5daff7b85efbb301321079ad/download/167549884595136713867986821810946618094"
            },
            {
              "name": "file_2.py",
              "download_path": "/submits/5daff7b85efbb301321079ad/download/231137695683950947965896920817718965815"
            },
            {
              "name": "file_3.py",
              "download_path": "/submits/5daff7b85efbb301321079ad/download/20058969985684047954592095696308069986"
            },
            {
              "name": "file_4.py",
              "download_path": "/submits/5daff7b85efbb301321079ad/download/13866131656316944653129224551457526536"
            }
          ]
        }
      },
      {
        "model_name": "LGBMClassifier",
        "model_version": "1.0",
        "tags": "FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_1_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_1_FUEL_FILTER_CLOG', 'value': 1}, FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_2_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_2_FUEL_FILTER_CLOG', 'value': 1}, LGBMClassifier: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': 4, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 8, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0, 'verbose': 0}",
        "author": "Alexander.Vasin",
        "id": "5daff7cb5efbb301321079ae",
        "metrics": {
          "roc": {
            "value": 0.7231682441014474,
            "short_value": 0.7232
          },
          "max_f1": {
            "value": 0.00234965034965035,
            "short_value": 0.0023
          }
        },
        "created": "2019-10-23T03:48:42+00:00",
        "features": 59,
        "attachments": {
          "notebook": true,
          "other_files": 4,
          "attachments_download_path": "/submits/5daff7cb5efbb301321079ae/download",
          "files": [
            {
              "name": "notebook.ipynb",
              "download_path": "/submits/5daff7cb5efbb301321079ae/download/206223146373824468182217376483528602461"
            },
            {
              "name": "file_0.py",
              "download_path": "/submits/5daff7cb5efbb301321079ae/download/328795945082440723593759679907407628745"
            },
            {
              "name": "file_1.py",
              "download_path": "/submits/5daff7cb5efbb301321079ae/download/128895184393663293459508860895641684221"
            },
            {
              "name": "file_2.py",
              "download_path": "/submits/5daff7cb5efbb301321079ae/download/292755343592639202029583304433273219138"
            },
            {
              "name": "file_3.py",
              "download_path": "/submits/5daff7cb5efbb301321079ae/download/194610171527342986577942199764699476538"
            }
          ]
        }
      },
      {
        "model_name": "LGBMClassifier",
        "model_version": "1.0",
        "tags": "FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_1_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_1_FUEL_FILTER_CLOG', 'value': 1}, FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_2_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_2_FUEL_FILTER_CLOG', 'value': 1}, LGBMClassifier: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': 4, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 8, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0, 'verbose': 0}",
        "author": "Alexander.Vasin",
        "id": "5daff9575efbb301321079af",
        "metrics": {
          "roc": {
            "value": 0.32496217375780667,
            "short_value": 0.325
          },
          "max_f1": {
            "value": 0.0009008806107970541,
            "short_value": 0.0009
          }
        },
        "created": "2019-10-23T03:55:18+00:00",
        "features": 59,
        "attachments": {
          "notebook": true,
          "other_files": 5,
          "attachments_download_path": "/submits/5daff9575efbb301321079af/download",
          "files": [
            {
              "name": "notebook.ipynb",
              "download_path": "/submits/5daff9575efbb301321079af/download/87729405738594795024025099627688180514"
            },
            {
              "name": "file_0.py",
              "download_path": "/submits/5daff9575efbb301321079af/download/37482788798739919362364187975089331105"
            },
            {
              "name": "file_1.py",
              "download_path": "/submits/5daff9575efbb301321079af/download/68656802013560496507705234632297575643"
            },
            {
              "name": "file_2.py",
              "download_path": "/submits/5daff9575efbb301321079af/download/337654833175812288393861576208316478359"
            },
            {
              "name": "file_3.py",
              "download_path": "/submits/5daff9575efbb301321079af/download/240109795415471402891994358182657494966"
            },
            {
              "name": "file_4.py",
              "download_path": "/submits/5daff9575efbb301321079af/download/129656682555193169105370879067101189716"
            }
          ]
        }
      },
      {
        "model_name": "LGBMClassifier",
        "model_version": "1.0",
        "tags": "FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_1_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_1_FUEL_FILTER_CLOG', 'value': 1}, FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_2_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_2_FUEL_FILTER_CLOG', 'value': 1}, LGBMClassifier: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': 4, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 8, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0, 'verbose': 0}",
        "author": "Alexander.Vasin",
        "id": "5dafffc95efbb301321079b0",
        "metrics": {
          "roc": {
            "value": 0.6143695089758674,
            "short_value": 0.6144
          },
          "max_f1": {
            "value": 0.0013198416190057193,
            "short_value": 0.0013
          }
        },
        "created": "2019-10-23T04:22:48+00:00",
        "features": 58,
        "attachments": {
          "notebook": true,
          "other_files": 1,
          "attachments_download_path": "/submits/5dafffc95efbb301321079b0/download",
          "files": [
            {
              "name": "notebook.ipynb",
              "download_path": "/submits/5dafffc95efbb301321079b0/download/26710351451982593643288139381105547949"
            },
            {
              "name": "file_0.py",
              "download_path": "/submits/5dafffc95efbb301321079b0/download/298965199371337838386012851487206211597"
            }
          ]
        }
      },
      {
        "model_name": "LGBMClassifier",
        "model_version": "1.0",
        "tags": "FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_1_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_1_FUEL_FILTER_CLOG', 'value': 1}, FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_2_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_2_FUEL_FILTER_CLOG', 'value': 1}, LGBMClassifier: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': 4, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 8, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0, 'verbose': 0}",
        "author": "Alexander.Vasin",
        "id": "5db000205efbb301321079b1",
        "metrics": {
          "roc": {
            "value": 0.44062706690781817,
            "short_value": 0.4406
          },
          "max_f1": {
            "value": 0.0010816349766594555,
            "short_value": 0.0011
          }
        },
        "created": "2019-10-23T04:24:16+00:00",
        "features": 58,
        "attachments": {
          "notebook": true,
          "other_files": 4,
          "attachments_download_path": "/submits/5db000205efbb301321079b1/download",
          "files": [
            {
              "name": "notebook.ipynb",
              "download_path": "/submits/5db000205efbb301321079b1/download/277486136042161639741149268912173276353"
            },
            {
              "name": "file_0.py",
              "download_path": "/submits/5db000205efbb301321079b1/download/263569455352733802983884287603630871614"
            },
            {
              "name": "file_1.py",
              "download_path": "/submits/5db000205efbb301321079b1/download/310815151808520802074744773702193385434"
            },
            {
              "name": "file_2.py",
              "download_path": "/submits/5db000205efbb301321079b1/download/917068995689168401768098937543616614"
            },
            {
              "name": "file_3.py",
              "download_path": "/submits/5db000205efbb301321079b1/download/57253707232409815206489390629932821435"
            }
          ]
        }
      },
      {
        "model_name": "LGBMClassifier",
        "model_version": "1.0",
        "tags": "FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_1_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_1_FUEL_FILTER_CLOG', 'value': 1}, FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_2_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_2_FUEL_FILTER_CLOG', 'value': 1}, LGBMClassifier: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0, 'verbose': 0}",
        "author": "Alexander.Vasin",
        "id": "5db17e6ad4551fa39acd3f36",
        "metrics": {
          "roc": {
            "value": 0.5008252998296722,
            "short_value": 0.5008
          },
          "max_f1": {
            "value": 0.0008435407623499638,
            "short_value": 0.0008
          }
        },
        "created": "2019-10-24T07:35:21+00:00",
        "features": 117,
        "attachments": null
      },
      {
        "model_name": "LGBMClassifier",
        "model_version": "1.0",
        "tags": "FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_1_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_1_FUEL_FILTER_CLOG', 'value': 1}, FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_2_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_2_FUEL_FILTER_CLOG', 'value': 1}, LGBMClassifier: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0, 'verbose': 0}",
        "author": "Alexander.Vasin",
        "id": "5db18318d4551fa39acd3f37",
        "metrics": {
          "roc": {
            "value": 0.500790180687984,
            "short_value": 0.5008
          },
          "max_f1": {
            "value": 0.0008434814697664611,
            "short_value": 0.0008
          }
        },
        "created": "2019-10-24T07:55:20+00:00",
        "features": 117,
        "attachments": {
          "notebook": true,
          "other_files": 1,
          "attachments_download_path": "/submits/5db18318d4551fa39acd3f37/download",
          "files": [
            {
              "name": "notebook.ipynb",
              "download_path": "/submits/5db18318d4551fa39acd3f37/download/296131352634034726321170441562861770180"
            },
            {
              "name": "file_0.py",
              "download_path": "/submits/5db18318d4551fa39acd3f37/download/63307403806206938892537572612240431017"
            }
          ]
        }
      },
      {
        "model_name": "RandomForestClassifier",
        "model_version": "1.0",
        "tags": "FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_1_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_1_FUEL_FILTER_CLOG', 'value': 1}, FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_2_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_2_FUEL_FILTER_CLOG', 'value': 1}, RandomForestClassifier: {'bootstrap': True, 'class_weight': 'balanced_subsample', 'criterion': 'gini', 'max_depth': 33, 'max_features': 'auto', 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 500, 'n_jobs': None, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': nan, 'strategy': 'median', 'verbose': 0}",
        "author": "Alexander.Vasin",
        "id": "5db2b6e2d4551fa39acd3f38",
        "metrics": {
          "roc": {
            "value": 0.35281933542877536,
            "short_value": 0.3528
          },
          "max_f1": {
            "value": 0.0008490110950313555,
            "short_value": 0.0008
          }
        },
        "created": "2019-10-25T05:48:29+00:00",
        "features": 117,
        "attachments": {
          "notebook": true,
          "other_files": 2,
          "attachments_download_path": "/submits/5db2b6e2d4551fa39acd3f38/download",
          "files": [
            {
              "name": "notebook.ipynb",
              "download_path": "/submits/5db2b6e2d4551fa39acd3f38/download/38432099419098056936105953959459942702"
            },
            {
              "name": "file_0.py",
              "download_path": "/submits/5db2b6e2d4551fa39acd3f38/download/338140931905988999999780105622754483976"
            },
            {
              "name": "file_1.py",
              "download_path": "/submits/5db2b6e2d4551fa39acd3f38/download/172124546142959259774674325849595816212"
            }
          ]
        }
      },
      {
        "model_name": "RandomForestClassifier",
        "model_version": "1.0",
        "tags": "FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_1_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_1_FUEL_FILTER_CLOG', 'value': 1}, FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_2_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_2_FUEL_FILTER_CLOG', 'value': 1}, RandomForestClassifier: {'bootstrap': True, 'class_weight': 'balanced_subsample', 'criterion': 'gini', 'max_depth': 33, 'max_features': 'auto', 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 500, 'n_jobs': None, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': nan, 'strategy': 'median', 'verbose': 0}",
        "author": "Alexander.Vasin",
        "id": "5db2b787d4551fa39acd3f3d",
        "metrics": {
          "roc": {
            "value": 0.35281933542877536,
            "short_value": 0.3528
          },
          "max_f1": {
            "value": 0.0008490110950313555,
            "short_value": 0.0008
          }
        },
        "created": "2019-10-25T05:51:15+00:00",
        "features": 117,
        "attachments": {
          "notebook": true,
          "other_files": 1,
          "attachments_download_path": "/submits/5db2b787d4551fa39acd3f3d/download",
          "files": [
            {
              "name": "notebook.ipynb",
              "download_path": "/submits/5db2b787d4551fa39acd3f3d/download/239103474106860496965632657656815434449"
            },
            {
              "name": "file_0.py",
              "download_path": "/submits/5db2b787d4551fa39acd3f3d/download/27173223292900300525873879565408598670"
            }
          ]
        }
      },
      {
        "model_name": "RandomForestClassifier",
        "model_version": "1.0",
        "tags": "FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_1_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_1_FUEL_FILTER_CLOG', 'value': 1}, FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_2_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_2_FUEL_FILTER_CLOG', 'value': 1}, RandomForestClassifier: {'bootstrap': True, 'class_weight': 'balanced_subsample', 'criterion': 'gini', 'max_depth': 33, 'max_features': 'auto', 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 500, 'n_jobs': None, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': nan, 'strategy': 'median', 'verbose': 0}",
        "author": "Alexander.Vasin",
        "id": "5db2c6a7d4551fa39acd3f3e",
        "metrics": {
          "roc": {
            "value": 0.35281933542877536,
            "short_value": 0.3528
          },
          "max_f1": {
            "value": 0.0008490110950313555,
            "short_value": 0.0008
          }
        },
        "created": "2019-10-25T06:55:47+00:00",
        "features": 117,
        "attachments": null
      },
      {
        "model_name": "RandomForestClassifier",
        "model_version": "1.0",
        "tags": "FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_1_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_1_FUEL_FILTER_CLOG', 'value': 1}, FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_2_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_2_FUEL_FILTER_CLOG', 'value': 1}, RandomForestClassifier: {'bootstrap': True, 'class_weight': {0: 1, 1: 5}, 'criterion': 'gini', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 1000, 'n_jobs': None, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': nan, 'strategy': 'median', 'verbose': 0}",
        "author": "Alexander.Vasin",
        "id": "5db2df13d4551fa39acd3f3f",
        "metrics": {
          "roc": {
            "value": 0.050591318548174675,
            "short_value": 0.0506
          },
          "max_f1": {
            "value": 0.0008421495868203591,
            "short_value": 0.0008
          }
        },
        "created": "2019-10-25T08:39:53+00:00",
        "features": 117,
        "attachments": {
          "notebook": true,
          "other_files": 1,
          "attachments_download_path": "/submits/5db2df13d4551fa39acd3f3f/download",
          "files": [
            {
              "name": "notebook.ipynb",
              "download_path": "/submits/5db2df13d4551fa39acd3f3f/download/164237882658869233117314744504846029140"
            },
            {
              "name": "file_0.py",
              "download_path": "/submits/5db2df13d4551fa39acd3f3f/download/203629724869244805729558086978154764255"
            }
          ]
        }
      },
      {
        "model_name": "LGBMClassifier",
        "model_version": "1.0",
        "tags": "LGBMClassifier: {'boosting_type': 'gbdt', 'class_weight': {0: 1, 1: 1000}, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': 16, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0, 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': nan, 'strategy': 'median', 'verbose': 0}",
        "author": "Alexander.Vasin",
        "id": "5db820c6d4551fa39acd3f56",
        "metrics": {
          "roc": {
            "value": 0.570281816479072,
            "short_value": 0.5703
          },
          "max_f1": {
            "value": 0.001362026695723236,
            "short_value": 0.0014
          }
        },
        "created": "2019-10-29T08:21:41+00:00",
        "features": 13,
        "attachments": null
      },
      {
        "model_name": "LGBMClassifier",
        "model_version": "1.0",
        "tags": "FeatureCycleCounterByIndicatorGroupedByAircraft: {'indicator_feature': 'event__cfds__ENG_1_FUEL_FILTER_CLOG', 'output_feature_name': 'cycle_counter__event__cfds__ENG_1_FUEL_FILTER_CLOG', 'value': 1}, FeatureCycleCounterByIndicatorGroupedByAircraft: {'indicator_feature': 'event__cfds__ENG_2_FUEL_FILTER_CLOG', 'output_feature_name': 'cycle_counter__event__cfds__ENG_2_FUEL_FILTER_CLOG', 'value': 1}, LGBMClassifier: {'boosting_type': 'gbdt', 'class_weight': {0: 1, 1: 10}, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.001, 'max_depth': 4, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 500, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0, 'verbose': 0}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': nan, 'strategy': 'median', 'verbose': 0}",
        "author": "Alexander.Vasin",
        "id": "5db93d40d4551fa39acd3f58",
        "metrics": {
          "roc": {
            "value": 0.0861765205125053,
            "short_value": 0.0862
          },
          "max_f1": {
            "value": 0.0008421495868203591,
            "short_value": 0.0008
          }
        },
        "created": "2019-10-30T04:35:27+00:00",
        "features": 12,
        "attachments": {
          "notebook": false,
          "other_files": 3,
          "attachments_download_path": "/submits/5db93d40d4551fa39acd3f58/download",
          "files": [
            {
              "name": "file_0.py",
              "download_path": "/submits/5db93d40d4551fa39acd3f58/download/307150922412495814544737115738088514775"
            },
            {
              "name": "file_1.py",
              "download_path": "/submits/5db93d40d4551fa39acd3f58/download/175534726879924022011373325618065826273"
            },
            {
              "name": "file_2.py",
              "download_path": "/submits/5db93d40d4551fa39acd3f58/download/21200776227922895386286237781822168143"
            }
          ]
        }
      },
      {
        "model_name": "XGBClassifier",
        "model_version": "1.0",
        "tags": "FeatureCycleCounterByIndicatorGroupedByAircraft: {'indicator_feature': 'event__cfds__ENG_1_FUEL_FILTER_CLOG', 'output_feature_name': 'cycle_counter__event__cfds__ENG_1_FUEL_FILTER_CLOG', 'value': 1}, FeatureCycleCounterByIndicatorGroupedByAircraft: {'indicator_feature': 'event__cfds__ENG_2_FUEL_FILTER_CLOG', 'output_feature_name': 'cycle_counter__event__cfds__ENG_2_FUEL_FILTER_CLOG', 'value': 1}, SimpleImputer: {'add_indicator': False, 'copy': True, 'fill_value': None, 'missing_values': nan, 'strategy': 'median', 'verbose': 0}, SimpleTransformer: {'method': <function <lambda> at 0x7efed4bd5560>}, XGBClassifier: {'base_score': 0.5, 'booster': 'gbtree', 'colsample_bylevel': 1, 'colsample_bynode': 1, 'colsample_bytree': 1, 'gamma': 0, 'learning_rate': 0.7, 'max_delta_step': 0, 'max_depth': 6, 'min_child_weight': 1, 'missing': None, 'n_estimators': 100, 'n_jobs': 1, 'nthread': None, 'objective': 'binary:logistic', 'random_state': 123, 'reg_alpha': 0, 'reg_lambda': 1, 'scale_pos_weight': 1, 'seed': None, 'silent': True, 'subsample': 1, 'verbosity': 1, 'eval_metric': 'aucpr', 'verbose': 0}",
        "author": "Alexander.Vasin",
        "id": "5db96af6d4551fa39acd3f59",
        "metrics": {
          "roc": {
            "value": 0.46236435231522954,
            "short_value": 0.4624
          },
          "max_f1": {
            "value": 0.0009176788124156546,
            "short_value": 0.0009
          }
        },
        "created": "2019-10-30T07:50:29+00:00",
        "features": 17,
        "attachments": {
          "notebook": true,
          "other_files": 2,
          "attachments_download_path": "/submits/5db96af6d4551fa39acd3f59/download",
          "files": [
            {
              "name": "notebook.ipynb",
              "download_path": "/submits/5db96af6d4551fa39acd3f59/download/30491541673018331055199170444318969869"
            },
            {
              "name": "file_0.py",
              "download_path": "/submits/5db96af6d4551fa39acd3f59/download/136345156009641499026000695945278846186"
            },
            {
              "name": "file_1.py",
              "download_path": "/submits/5db96af6d4551fa39acd3f59/download/14740663419786444176374562715661440712"
            }
          ]
        }
      },
      {
        "model_name": "XGBClassifier",
        "model_version": "1.0",
        "tags": "XGBClassifier: {'base_score': 0.5, 'booster': 'gbtree', 'colsample_bylevel': 1, 'colsample_bynode': 1, 'colsample_bytree': 1, 'gamma': 0, 'learning_rate': 0.7, 'max_delta_step': 0, 'max_depth': 6, 'min_child_weight': 1, 'missing': None, 'n_estimators': 100, 'n_jobs': 1, 'nthread': None, 'objective': 'binary:logistic', 'random_state': 123, 'reg_alpha': 0, 'reg_lambda': 1, 'scale_pos_weight': 1, 'seed': None, 'silent': True, 'subsample': 1, 'verbosity': 1, 'eval_metric': 'aucpr', 'verbose': 0, 'xgbclassifier__n_estimators': 10, 'xgbclassifier__max_depth': 64, 'xgbclassifier__learning_rate': 0.01, 'xgbclassifier__class_weight': {0: 1, 1: 100}}",
        "author": "Alexander.Vasin",
        "id": "5db970f6d4551fa39acd3f5a",
        "metrics": {
          "roc": {
            "value": 0.6043353117116484,
            "short_value": 0.6043
          },
          "max_f1": {
            "value": 0.0020820681877331483,
            "short_value": 0.0021
          }
        },
        "created": "2019-10-30T08:16:04+00:00",
        "features": 17,
        "attachments": {
          "notebook": true,
          "other_files": 1,
          "attachments_download_path": "/submits/5db970f6d4551fa39acd3f5a/download",
          "files": [
            {
              "name": "notebook.ipynb",
              "download_path": "/submits/5db970f6d4551fa39acd3f5a/download/67137977951730783258825600034803103101"
            },
            {
              "name": "file_0.py",
              "download_path": "/submits/5db970f6d4551fa39acd3f5a/download/250341449034758041450536990071845820364"
            }
          ]
        }
      },
      {
        "model_name": "XGBClassifier",
        "model_version": "1.0",
        "tags": "XGBClassifier: {'base_score': 0.5, 'booster': 'gbtree', 'colsample_bylevel': 1, 'colsample_bynode': 1, 'colsample_bytree': 1, 'gamma': 0, 'learning_rate': 0.7, 'max_delta_step': 0, 'max_depth': 6, 'min_child_weight': 1, 'missing': None, 'n_estimators': 100, 'n_jobs': 1, 'nthread': None, 'objective': 'binary:logistic', 'random_state': 123, 'reg_alpha': 0, 'reg_lambda': 1, 'scale_pos_weight': 1, 'seed': None, 'silent': True, 'subsample': 1, 'verbosity': 1, 'eval_metric': 'aucpr', 'verbose': 0, 'xgbclassifier__n_estimators': 10, 'xgbclassifier__max_depth': 64, 'xgbclassifier__learning_rate': 0.01, 'xgbclassifier__class_weight': {0: 1, 1: 100}}",
        "author": "Alexander.Vasin",
        "id": "5db971abd4551fa39acd3f5b",
        "metrics": {
          "roc": {
            "value": 0.5415788688124462,
            "short_value": 0.5416
          },
          "max_f1": {
            "value": 0.1111111111111111,
            "short_value": 0.1111
          }
        },
        "created": "2019-10-30T08:19:04+00:00",
        "features": 17,
        "attachments": {
          "notebook": false,
          "other_files": 3,
          "attachments_download_path": "/submits/5db971abd4551fa39acd3f5b/download",
          "files": [
            {
              "name": "file_0.py",
              "download_path": "/submits/5db971abd4551fa39acd3f5b/download/51016754705689008243886628612269847423"
            },
            {
              "name": "file_1.py",
              "download_path": "/submits/5db971abd4551fa39acd3f5b/download/209065831095861077383465752895997223307"
            },
            {
              "name": "file_2.py",
              "download_path": "/submits/5db971abd4551fa39acd3f5b/download/138103334794746553178438572278927710093"
            }
          ]
        }
      },
      {
        "model_name": "XGBClassifier",
        "model_version": "1.0",
        "tags": "XGBClassifier: {'base_score': 0.5, 'booster': 'gbtree', 'colsample_bylevel': 1, 'colsample_bynode': 1, 'colsample_bytree': 1, 'gamma': 0, 'learning_rate': 0.7, 'max_delta_step': 0, 'max_depth': 6, 'min_child_weight': 1, 'missing': None, 'n_estimators': 100, 'n_jobs': 1, 'nthread': None, 'objective': 'binary:logistic', 'random_state': 123, 'reg_alpha': 0, 'reg_lambda': 1, 'scale_pos_weight': 1, 'seed': None, 'silent': True, 'subsample': 1, 'verbosity': 1, 'eval_metric': 'aucpr', 'verbose': 0, 'xgbclassifier__n_estimators': 10, 'xgbclassifier__max_depth': 64, 'xgbclassifier__learning_rate': 0.01, 'xgbclassifier__class_weight': {0: 1, 1: 100}}",
        "author": "Alexander.Vasin",
        "id": "5db97221d4551fa39acd3f5c",
        "metrics": {
          "roc": {
            "value": 0.45836845247502145,
            "short_value": 0.4584
          },
          "max_f1": {
            "value": 0.0008421495868203591,
            "short_value": 0.0008
          }
        },
        "created": "2019-10-30T08:21:04+00:00",
        "features": 17,
        "attachments": {
          "notebook": true,
          "other_files": 4,
          "attachments_download_path": "/submits/5db97221d4551fa39acd3f5c/download",
          "files": [
            {
              "name": "notebook.ipynb",
              "download_path": "/submits/5db97221d4551fa39acd3f5c/download/209330624276118119597490655141278186790"
            },
            {
              "name": "file_0.py",
              "download_path": "/submits/5db97221d4551fa39acd3f5c/download/175640823961193612823298138950936268530"
            },
            {
              "name": "file_1.py",
              "download_path": "/submits/5db97221d4551fa39acd3f5c/download/205231326170377754547144674035986686174"
            },
            {
              "name": "file_2.py",
              "download_path": "/submits/5db97221d4551fa39acd3f5c/download/293384899385299383096637988230996753980"
            },
            {
              "name": "file_3.py",
              "download_path": "/submits/5db97221d4551fa39acd3f5c/download/247440620620124532388036432195544728963"
            }
          ]
        }
      },
      {
        "model_name": "XGBClassifier",
        "model_version": "1.0",
        "tags": "XGBClassifier: {'base_score': 0.5, 'booster': 'gbtree', 'colsample_bylevel': 1, 'colsample_bynode': 1, 'colsample_bytree': 1, 'gamma': 0, 'learning_rate': 0.7, 'max_delta_step': 0, 'max_depth': 6, 'min_child_weight': 1, 'missing': None, 'n_estimators': 100, 'n_jobs': 1, 'nthread': None, 'objective': 'binary:logistic', 'random_state': 123, 'reg_alpha': 0, 'reg_lambda': 1, 'scale_pos_weight': 1, 'seed': None, 'silent': True, 'subsample': 1, 'verbosity': 1, 'eval_metric': 'aucpr', 'verbose': 0, 'xgbclassifier__n_estimators': 10, 'xgbclassifier__max_depth': 64, 'xgbclassifier__learning_rate': 0.01, 'xgbclassifier__class_weight': {0: 1, 1: 100}}",
        "author": "Alexander.Vasin",
        "id": "5db97232d4551fa39acd3f5d",
        "metrics": {
          "roc": {
            "value": 0.45843869075839777,
            "short_value": 0.4584
          },
          "max_f1": {
            "value": 0.0008421495868203591,
            "short_value": 0.0008
          }
        },
        "created": "2019-10-30T08:21:21+00:00",
        "features": 17,
        "attachments": {
          "notebook": true,
          "other_files": 5,
          "attachments_download_path": "/submits/5db97232d4551fa39acd3f5d/download",
          "files": [
            {
              "name": "notebook.ipynb",
              "download_path": "/submits/5db97232d4551fa39acd3f5d/download/97058575931567252389925827315049486203"
            },
            {
              "name": "file_0.py",
              "download_path": "/submits/5db97232d4551fa39acd3f5d/download/319416205978592634251067775789876138211"
            },
            {
              "name": "file_1.py",
              "download_path": "/submits/5db97232d4551fa39acd3f5d/download/269724078906320444589622859507696110795"
            },
            {
              "name": "file_2.py",
              "download_path": "/submits/5db97232d4551fa39acd3f5d/download/216513342981793522409100936436341373510"
            },
            {
              "name": "file_3.py",
              "download_path": "/submits/5db97232d4551fa39acd3f5d/download/338733926742574722001845725370981692295"
            },
            {
              "name": "file_4.py",
              "download_path": "/submits/5db97232d4551fa39acd3f5d/download/36184605434522513212375411384954965036"
            }
          ]
        }
      },
      {
        "model_name": "XGBClassifier",
        "model_version": "1.0",
        "tags": "XGBClassifier: {'base_score': 0.5, 'booster': 'gbtree', 'colsample_bylevel': 1, 'colsample_bynode': 1, 'colsample_bytree': 1, 'gamma': 0, 'learning_rate': 0.7, 'max_delta_step': 0, 'max_depth': 6, 'min_child_weight': 1, 'missing': None, 'n_estimators': 100, 'n_jobs': 1, 'nthread': None, 'objective': 'binary:logistic', 'random_state': 123, 'reg_alpha': 0, 'reg_lambda': 1, 'scale_pos_weight': 1, 'seed': None, 'silent': True, 'subsample': 1, 'verbosity': 1, 'eval_metric': 'aucpr', 'verbose': 0, 'xgbclassifier__n_estimators': 10, 'xgbclassifier__max_depth': 64, 'xgbclassifier__learning_rate': 0.01, 'xgbclassifier__class_weight': {0: 1, 1: 100}}",
        "author": "Alexander.Vasin",
        "id": "5db97247d4551fa39acd3f5e",
        "metrics": {
          "roc": {
            "value": 0.5415613092416021,
            "short_value": 0.5416
          },
          "max_f1": {
            "value": 0.10526315789473685,
            "short_value": 0.1053
          }
        },
        "created": "2019-10-30T08:21:42+00:00",
        "features": 17,
        "attachments": {
          "notebook": false,
          "other_files": 3,
          "attachments_download_path": "/submits/5db97247d4551fa39acd3f5e/download",
          "files": [
            {
              "name": "file_0.py",
              "download_path": "/submits/5db97247d4551fa39acd3f5e/download/178817635543139555867341315280983208012"
            },
            {
              "name": "file_1.py",
              "download_path": "/submits/5db97247d4551fa39acd3f5e/download/69191463702844968891675351816973896838"
            },
            {
              "name": "file_2.py",
              "download_path": "/submits/5db97247d4551fa39acd3f5e/download/264083513120808568135858341090717363185"
            }
          ]
        }
      },
      {
        "model_name": "XGBClassifier",
        "model_version": "1.0",
        "tags": "XGBClassifier: {'base_score': 0.5, 'booster': 'gbtree', 'colsample_bylevel': 1, 'colsample_bynode': 1, 'colsample_bytree': 1, 'gamma': 0, 'learning_rate': 0.7, 'max_delta_step': 0, 'max_depth': 6, 'min_child_weight': 1, 'missing': None, 'n_estimators': 100, 'n_jobs': 1, 'nthread': None, 'objective': 'binary:logistic', 'random_state': 123, 'reg_alpha': 0, 'reg_lambda': 1, 'scale_pos_weight': 1, 'seed': None, 'silent': True, 'subsample': 1, 'verbosity': 1, 'eval_metric': 'aucpr', 'verbose': 0, 'xgbclassifier__n_estimators': 10, 'xgbclassifier__max_depth': 64, 'xgbclassifier__learning_rate': 0.01, 'xgbclassifier__class_weight': {0: 1, 1: 100}}",
        "author": "Alexander.Vasin",
        "id": "5db9725ed4551fa39acd3f5f",
        "metrics": {
          "roc": {
            "value": 0.5415788688124462,
            "short_value": 0.5416
          },
          "max_f1": {
            "value": 0.1111111111111111,
            "short_value": 0.1111
          }
        },
        "created": "2019-10-30T08:22:05+00:00",
        "features": 17,
        "attachments": {
          "notebook": true,
          "other_files": 5,
          "attachments_download_path": "/submits/5db9725ed4551fa39acd3f5f/download",
          "files": [
            {
              "name": "notebook.ipynb",
              "download_path": "/submits/5db9725ed4551fa39acd3f5f/download/51559865036745515079441728162980252579"
            },
            {
              "name": "file_0.py",
              "download_path": "/submits/5db9725ed4551fa39acd3f5f/download/296762430546532834232378445104936888682"
            },
            {
              "name": "file_1.py",
              "download_path": "/submits/5db9725ed4551fa39acd3f5f/download/279126823494061169243023315414125813941"
            },
            {
              "name": "file_2.py",
              "download_path": "/submits/5db9725ed4551fa39acd3f5f/download/179057804557683813933271120360197464750"
            },
            {
              "name": "file_3.py",
              "download_path": "/submits/5db9725ed4551fa39acd3f5f/download/152268794163869128945255405368517004704"
            },
            {
              "name": "file_4.py",
              "download_path": "/submits/5db9725ed4551fa39acd3f5f/download/170820804022027868484842862214567792066"
            }
          ]
        }
      },
      {
        "model_name": "XGBClassifier",
        "model_version": "1.0",
        "tags": "XGBClassifier: {'base_score': 0.5, 'booster': 'gbtree', 'colsample_bylevel': 1, 'colsample_bynode': 1, 'colsample_bytree': 1, 'gamma': 0, 'learning_rate': 0.7, 'max_delta_step': 0, 'max_depth': 6, 'min_child_weight': 1, 'missing': None, 'n_estimators': 100, 'n_jobs': 1, 'nthread': None, 'objective': 'binary:logistic', 'random_state': 123, 'reg_alpha': 0, 'reg_lambda': 1, 'scale_pos_weight': 1, 'seed': None, 'silent': True, 'subsample': 1, 'verbosity': 1, 'eval_metric': 'aucpr', 'verbose': 0, 'xgbclassifier__n_estimators': 10, 'xgbclassifier__max_depth': 64, 'xgbclassifier__learning_rate': 0.01, 'xgbclassifier__class_weight': {0: 1, 1: 100}}",
        "author": "Alexander.Vasin",
        "id": "5db972c2d4551fa39acd3f60",
        "metrics": {
          "roc": {
            "value": 0.5,
            "short_value": 0.5
          },
          "max_f1": {
            "value": 0.0008421495868203591,
            "short_value": 0.0008
          }
        },
        "created": "2019-10-30T08:23:45+00:00",
        "features": 17,
        "attachments": {
          "notebook": true,
          "other_files": 5,
          "attachments_download_path": "/submits/5db972c2d4551fa39acd3f60/download",
          "files": [
            {
              "name": "notebook.ipynb",
              "download_path": "/submits/5db972c2d4551fa39acd3f60/download/295961337834594390935993078780337927480"
            },
            {
              "name": "file_0.py",
              "download_path": "/submits/5db972c2d4551fa39acd3f60/download/195351834476798739128541173829161664830"
            },
            {
              "name": "file_1.py",
              "download_path": "/submits/5db972c2d4551fa39acd3f60/download/167650602474935236033000087394014130504"
            },
            {
              "name": "file_2.py",
              "download_path": "/submits/5db972c2d4551fa39acd3f60/download/8398718290954705174683100915865288172"
            },
            {
              "name": "file_3.py",
              "download_path": "/submits/5db972c2d4551fa39acd3f60/download/281997850523362336659230029820103650098"
            },
            {
              "name": "file_4.py",
              "download_path": "/submits/5db972c2d4551fa39acd3f60/download/127140074183387306747508512666901901408"
            }
          ]
        }
      },
      {
        "model_name": "XGBClassifier",
        "model_version": "1.0",
        "tags": "XGBClassifier: {'base_score': 0.5, 'booster': 'gbtree', 'colsample_bylevel': 1, 'colsample_bynode': 1, 'colsample_bytree': 1, 'gamma': 0, 'learning_rate': 0.7, 'max_delta_step': 0, 'max_depth': 6, 'min_child_weight': 1, 'missing': None, 'n_estimators': 100, 'n_jobs': 1, 'nthread': None, 'objective': 'binary:logistic', 'random_state': 123, 'reg_alpha': 0, 'reg_lambda': 1, 'scale_pos_weight': 1, 'seed': None, 'silent': True, 'subsample': 1, 'verbosity': 1, 'eval_metric': 'aucpr', 'verbose': 0, 'xgbclassifier__n_estimators': 100, 'xgbclassifier__max_depth': 4, 'xgbclassifier__learning_rate': 0.001, 'xgbclassifier__class_weight': {0: 1, 1: 500}}",
        "author": "Alexander.Vasin",
        "id": "5dbad116d4551fa39acd3f61",
        "metrics": {
          "roc": {
            "value": 0.5,
            "short_value": 0.5
          },
          "max_f1": {
            "value": 0.0008421495868203591,
            "short_value": 0.0008
          }
        },
        "created": "2019-10-31T09:18:29+00:00",
        "features": 17,
        "attachments": {
          "notebook": false,
          "other_files": 3,
          "attachments_download_path": "/submits/5dbad116d4551fa39acd3f61/download",
          "files": [
            {
              "name": "file_0.py",
              "download_path": "/submits/5dbad116d4551fa39acd3f61/download/159035277690579691331327368201851146185"
            },
            {
              "name": "file_1.py",
              "download_path": "/submits/5dbad116d4551fa39acd3f61/download/321984765216947679583617174774162313405"
            },
            {
              "name": "file_2.py",
              "download_path": "/submits/5dbad116d4551fa39acd3f61/download/153605096209189174014627702240167852491"
            }
          ]
        }
      },
      {
        "model_name": "catboost, 2 features",
        "model_version": 2,
        "tags": null,
        "author": "Andrey.Kalmykov",
        "id": "5dbc4e0eb93785faef1ca4d9",
        "metrics": {
          "roc": {
            "value": 0.5624795138340153,
            "short_value": 0.5625
          },
          "max_f1": {
            "value": 0.14285714285714285,
            "short_value": 0.1429
          }
        },
        "created": "2019-11-01T12:23:57+00:00",
        "features": 2,
        "attachments": {
          "notebook": true,
          "other_files": 4,
          "attachments_download_path": "/submits/5dbc4e0eb93785faef1ca4d9/download",
          "files": [
            {
              "name": "notebook.ipynb",
              "download_path": "/submits/5dbc4e0eb93785faef1ca4d9/download/61045051541043268612910358011211106351"
            },
            {
              "name": "file_0.py",
              "download_path": "/submits/5dbc4e0eb93785faef1ca4d9/download/269157920328409993100111657711517237394"
            },
            {
              "name": "file_1.py",
              "download_path": "/submits/5dbc4e0eb93785faef1ca4d9/download/278891018940824514904764248180974388814"
            },
            {
              "name": "file_2.py",
              "download_path": "/submits/5dbc4e0eb93785faef1ca4d9/download/200447095252255641174207820583963011940"
            },
            {
              "name": "file_3.py",
              "download_path": "/submits/5dbc4e0eb93785faef1ca4d9/download/232782479707446302382108040614013140794"
            }
          ]
        }
      },
      {
        "model_name": "LGBMClassifier",
        "model_version": "1.0",
        "tags": "FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_1_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_1_FUEL_FILTER_CLOG', 'value': 1}, FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_2_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_2_FUEL_FILTER_CLOG', 'value': 1}, FeatureCycleCounterByIndicatorGroupedByAircraft: {'indicator_feature': 'event__cfds__ENG_1_FUEL_FILTER_CLOG', 'output_feature_name': 'cycle_counter__event__cfds__ENG_1_FUEL_FILTER_CLOG', 'value': 1}, FeatureCycleCounterByIndicatorGroupedByAircraft: {'indicator_feature': 'event__cfds__ENG_2_FUEL_FILTER_CLOG', 'output_feature_name': 'cycle_counter__event__cfds__ENG_2_FUEL_FILTER_CLOG', 'value': 1}, LGBMClassifier: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.0001, 'max_depth': 4, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0, 'verbose': 0}",
        "author": "Alexander.Vasin",
        "id": "5dbd9f7852b346996b32b082",
        "metrics": {
          "roc": {
            "value": 0.9918615047381575,
            "short_value": 0.9919
          },
          "max_f1": {
            "value": 0.15384615384615385,
            "short_value": 0.1538
          }
        },
        "created": "2019-11-02T12:23:34+00:00",
        "features": 5784,
        "attachments": {
          "notebook": true,
          "other_files": 1,
          "attachments_download_path": "/submits/5dbd9f7852b346996b32b082/download",
          "files": [
            {
              "name": "notebook.ipynb",
              "download_path": "/submits/5dbd9f7852b346996b32b082/download/295924313707725661531082744750444819091"
            },
            {
              "name": "file_0.py",
              "download_path": "/submits/5dbd9f7852b346996b32b082/download/152037884368620997401570620438700712069"
            }
          ]
        }
      },
      {
        "model_name": "LGBMClassifier",
        "model_version": "1.0",
        "tags": "FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_1_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_1_FUEL_FILTER_CLOG', 'value': 1}, FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_2_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_2_FUEL_FILTER_CLOG', 'value': 1}, FeatureCycleCounterByIndicatorGroupedByAircraft: {'indicator_feature': 'event__cfds__ENG_1_FUEL_FILTER_CLOG', 'output_feature_name': 'cycle_counter__event__cfds__ENG_1_FUEL_FILTER_CLOG', 'value': 1}, FeatureCycleCounterByIndicatorGroupedByAircraft: {'indicator_feature': 'event__cfds__ENG_2_FUEL_FILTER_CLOG', 'output_feature_name': 'cycle_counter__event__cfds__ENG_2_FUEL_FILTER_CLOG', 'value': 1}, LGBMClassifier: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.0001, 'max_depth': 4, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0, 'verbose': 0}",
        "author": "Alexander.Vasin",
        "id": "5dc1046b52b346996b32b083",
        "metrics": {
          "roc": {
            "value": 0.9918615047381575,
            "short_value": 0.9919
          },
          "max_f1": {
            "value": 0.15384615384615385,
            "short_value": 0.1538
          }
        },
        "created": "2019-11-05T02:11:05+00:00",
        "features": 5784,
        "attachments": {
          "notebook": true,
          "other_files": 4,
          "attachments_download_path": "/submits/5dc1046b52b346996b32b083/download",
          "files": [
            {
              "name": "notebook.ipynb",
              "download_path": "/submits/5dc1046b52b346996b32b083/download/300824001216582139610113498224804310576"
            },
            {
              "name": "file_0.py",
              "download_path": "/submits/5dc1046b52b346996b32b083/download/171746518735720409385471478521716632426"
            },
            {
              "name": "file_1.py",
              "download_path": "/submits/5dc1046b52b346996b32b083/download/283214472064147500710395549467914977004"
            },
            {
              "name": "file_2.py",
              "download_path": "/submits/5dc1046b52b346996b32b083/download/153712274034731263637449359932183007211"
            },
            {
              "name": "file_3.py",
              "download_path": "/submits/5dc1046b52b346996b32b083/download/81472900175874658823662862133379644913"
            }
          ]
        }
      },
      {
        "model_name": "LGBMClassifier",
        "model_version": "1.0",
        "tags": "FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_1_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_1_FUEL_FILTER_CLOG', 'value': 1}, FeatureCounterPreviousValueGroupedByAircraft: {'base_feature': 'event__cfds__ENG_2_FUEL_FILTER_CLOG', 'output_feature_name': 'counter_value__event__cfds__ENG_2_FUEL_FILTER_CLOG', 'value': 1}, FeatureCycleCounterByIndicatorGroupedByAircraft: {'indicator_feature': 'event__cfds__ENG_1_FUEL_FILTER_CLOG', 'output_feature_name': 'cycle_counter__event__cfds__ENG_1_FUEL_FILTER_CLOG', 'value': 1}, FeatureCycleCounterByIndicatorGroupedByAircraft: {'indicator_feature': 'event__cfds__ENG_2_FUEL_FILTER_CLOG', 'output_feature_name': 'cycle_counter__event__cfds__ENG_2_FUEL_FILTER_CLOG', 'value': 1}, LGBMClassifier: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.0001, 'max_depth': 4, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0, 'verbose': 0}",
        "author": "Alexander.Vasin",
        "id": "5dc10a0652b346996b32b084",
        "metrics": {
          "roc": {
            "value": 0.9918615047381575,
            "short_value": 0.9919
          },
          "max_f1": {
            "value": 0.15384615384615385,
            "short_value": 0.1538
          }
        },
        "created": "2019-11-05T02:35:00+00:00",
        "features": 5784,
        "attachments": {
          "notebook": true,
          "other_files": 5,
          "attachments_download_path": "/submits/5dc10a0652b346996b32b084/download",
          "files": [
            {
              "name": "notebook.ipynb",
              "download_path": "/submits/5dc10a0652b346996b32b084/download/69011782869405007587979939745339989509"
            },
            {
              "name": "file_0.py",
              "download_path": "/submits/5dc10a0652b346996b32b084/download/102446168786242593984250148124708368631"
            },
            {
              "name": "file_1.py",
              "download_path": "/submits/5dc10a0652b346996b32b084/download/321546665218867661461236424617703734691"
            },
            {
              "name": "file_2.py",
              "download_path": "/submits/5dc10a0652b346996b32b084/download/155831340857542354921445801030707836484"
            },
            {
              "name": "file_3.py",
              "download_path": "/submits/5dc10a0652b346996b32b084/download/31734288930219376988777016896528688811"
            },
            {
              "name": "file_4.py",
              "download_path": "/submits/5dc10a0652b346996b32b084/download/86488816617559691289987510098165045382"
            }
          ]
        }
      }
    ]
  },
  "meta": {
    "total_pages": 6,
    "current_page": 2,
    "per_page": 200,
    "sort_column": "roc",
    "sort_order": "asc",
    "search_matches": [
      {
        "matched_row": { "id": "6017b6b376a8c74ef40b47d6"},
        "matched_columns": [
          "model_name",
          "created"
        ]
      },
      {
        "matched_row": { "id": "000000000000000000000000"},
        "matched_columns": [
          "created"
        ]
      }
    ]
  }
}
